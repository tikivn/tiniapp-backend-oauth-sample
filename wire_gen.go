// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//+build !wireinject

package main

import (
	"tiniapp-backend-oauth-sample/internal/repos"
	"tiniapp-backend-oauth-sample/internal/services/api"
	"tiniapp-backend-oauth-sample/pkg/logger"
)

import (
	_ "github.com/google/subcommands"
	_ "go.uber.org/automaxprocs"
)

// Injectors from wire.go:

func InitializeApplication() (*Application, func(), error) {
	config := ProvideConfig()
	loggerConfig := ProvideLoggerConfig(config)
	iLogger, cleanup, err := logger.ProvideLogger(loggerConfig)
	if err != nil {
		return nil, nil, err
	}
	apiConfig := ProvideAPIServiceConfig(config)
	iRepository := repos.NewRepository()
	service, err := api.NewService(apiConfig, iRepository)
	if err != nil {
		cleanup()
		return nil, nil, err
	}
	application, cleanup2, err := ProvideApplication(config, iLogger, service)
	if err != nil {
		cleanup()
		return nil, nil, err
	}
	return application, func() {
		cleanup2()
		cleanup()
	}, nil
}
